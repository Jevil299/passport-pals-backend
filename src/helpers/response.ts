export const responseMessage = {
    loginSuccess: "Login Successful!",
    onlyUserRegister: "Only user can register!",
    signupSuccess: "Registration Successful!",
    signupError: "Registration error!",
    internalServerError: "Internal Server Error!",
    alreadyEmail: "Entering the existing email address",
    alreadyUserName: "Entering the existing user name",
    alreadyUserNameInEmail: "Entering the existing user name in email",
    alreadyPhoneNumber: "Phone number is already registered!",
    alreadyUsername: "You've entered username is already exist!",
    emailUnverified: "Your email is unverified!",
    accountBlock: "Your account has been blocked!",
    invalidOldPassword: "You have entered an invalid old password!",
    invalidUserEmail: "You have entered an invalid email!",
    invalidUserPassword: "You have entered an invalid password!",
    invalidOTP: "Invalid OTP!",
    tokenExpire: "Token has been expired!",
    expireOTP: "OTP has been expired!",
    OTPverified: "OTP has been verified successfully!",
    emailVerified: "Your email address has been verified!",
    invalidEmail: "You have entered an invalid email!",
    invalidIdTokenAndAccessToken: "You have entered an invalid idToken or accessToken!",
    errorMail: "Error in mail system!",
    resetPasswordSuccess: "Your password has been successfully reset!",
    resetPasswordError: "Error in reset password!",
    oldPasswordError: "You have entered the old password wrong!",
    passwordChangeSuccess: "Password has been changed!",
    passwordChangeError: "During password changing error in database!",
    invalidOldTokenReFreshToken: "You have entered an invalid old token or refresh token!",
    refreshTokenNotFound: "Refresh token not found!",
    refreshTokenSuccess: "A new token has been successfully generated!",
    differentToken: "Do not try a different token!",
    tokenNotFound: "We can't find tokens in header!",
    logout: "Logout Successful!",
    fileUploadSuccess: "Your requested file uploaded successfully!",
    addDataError: "Oops! Something went wrong!",
    accessDenied: "Access Denied!",
    invalidToken: "Invalid Token!",
    invalidBodyFields: "Invalid body fields combination!",
    unavailableCategory: "Category unavailable!",
    reviewAlready: "Your review already exists in the store review list!",
    storeOwnerReviewError: "You can't review in your store!",
    allUserSentEmail: "Email has been sent to all user successful!",
    appleAccountError: "Your account has been deleted,Please remove account from Setting > Your account > Password & Security > Apps using Apple ID > GrubGrams > Click to stop using Apple ID",
    paymentSuccess: "Payment successful",
    paymentFailed: "Payment failed",
    insufficientAmount: "Request has been declined due to insufficient PIPs in your account",
    notPurchaseService: "Oops! Some of the service you've not purchased",
    allNotificationDelete: "All notification has been deleted",
    allMessageDelete: "All message has been deleted",
    selectedNotificationDelete: "Selected notification has been deleted",
    blockbyuser: "this user's id is block by you otherwise you block by this user ",
    onweruser: "This gig is posted by you so you can't bid on it. ",
    seterrorbidgig: "This gig's one bid alredy accept by you so you can't accept on it. ",
    addbidgigerror: "You have already bidded on a Gig with the same date and time. Please de-conflict",
    errorrequestsite: "You already send request site",
    deleteDataError: "Data not deleted!",
    invalidId: (message: string): any => { return `Invalid ${message}!` },
    customMessage: (message: string): any => { return `${message}!` },
    dataAlreadyExist: (message: any): any => { return `${message[0].toUpperCase() + message.slice(1).toLowerCase()} already exists!` },
    getDataSuccess: (message: string): any => { return `${message[0].toUpperCase() + message.slice(1).toLowerCase()} successfully retrieved!` },
    addDataSuccess: (message: string): any => { return `${message[0].toUpperCase() + message.slice(1).toLowerCase()} successfully added!` },
    getDataNotFound: (message: string): any => { return `We couldn't find the ${message.toLowerCase()} you requested!` },
    updateDataSuccess: (message: string): any => { return `${message[0].toUpperCase() + message.slice(1).toLowerCase()} has been successfully updated!` },
    updateDataError: (message: string): any => { return `${message[0].toUpperCase() + message.slice(1).toLowerCase()} updating time getting an error!` },
    deleteDataSuccess: (message: string): any => { return `Your ${message.toLowerCase()} has been successfully deleted!` },
    invitationSuccess: (message: any): any => { return `Congratulation,You've successfully joined ${message}'s team!` },
}